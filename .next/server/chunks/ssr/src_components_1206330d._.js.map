{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6WAAC,oXAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6WAAC,oXAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6WAAC,oXAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6WAAC,oXAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/charts/area-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useTheme } from \"next-themes\";\n\ninterface AreaChartProps {\n  title?: string;\n  description?: string;\n  data: {\n    name: string;\n    value: number;\n    previousValue?: number;\n  }[];\n  className?: string;\n}\n\nexport function AreaChartComponent({\n  title,\n  description,\n  data,\n  className,\n}: AreaChartProps) {\n  const { theme, resolvedTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  \n  // Set mounted to true after the component mounts\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  \n  const isDark = mounted ? resolvedTheme === \"dark\" : false;\n  \n  const handleMouseEnter = (_: any, index: number) => {\n    setActiveIndex(index);\n  };\n  \n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const getPercentChange = () => {\n    if (data.length < 2) return 0;\n    \n    const currentValue = data[data.length - 1].value;\n    const previousValue = data[data.length - 2].value;\n    \n    if (previousValue === 0) return 0;\n    return ((currentValue - previousValue) / previousValue) * 100;\n  };\n\n  const percentChange = getPercentChange();\n  const trend = percentChange >= 0 ? \"up\" : \"down\";\n  \n  // If not mounted yet, render a minimal version that won't cause hydration issues\n  if (!mounted) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>{title || \"Area Chart\"}</CardTitle>\n          <CardDescription>\n            {description || \"Showing data trends over time\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-4 flex items-center gap-2\">\n            <p className=\"text-sm font-medium\">\n              Loading chart data...\n            </p>\n          </div>\n          <div className=\"h-[300px]\">\n            {/* Empty space for chart */}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title || \"Area Chart\"}</CardTitle>\n        <CardDescription>\n          {description || \"Showing data trends over time\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"mb-4 flex items-center gap-2\">\n          <p className=\"text-sm font-medium\">\n            Trending{\" \"}\n            <span className={trend === \"up\" ? \"text-emerald-500\" : \"text-rose-500\"}>\n              {trend} by {Math.abs(percentChange).toFixed(1)}%\n            </span>{\" \"}\n            this month\n          </p>\n        </div>\n        <div className=\"h-[300px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n              data={data}\n              margin={{\n                top: 10,\n                right: 10,\n                left: 0,\n                bottom: 0,\n              }}\n              onMouseLeave={handleMouseLeave}\n            >\n              <defs>\n                <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"5%\"\n                    stopColor={isDark ? \"#9333ea\" : \"#c084fc\"}\n                    stopOpacity={0.8}\n                  />\n                  <stop\n                    offset=\"95%\"\n                    stopColor={isDark ? \"#9333ea\" : \"#c084fc\"}\n                    stopOpacity={0}\n                  />\n                </linearGradient>\n                <linearGradient id=\"colorPreviousValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"5%\"\n                    stopColor={isDark ? \"#eab308\" : \"#fef08a\"}\n                    stopOpacity={0.8}\n                  />\n                  <stop\n                    offset=\"95%\"\n                    stopColor={isDark ? \"#eab308\" : \"#fef08a\"}\n                    stopOpacity={0}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                vertical={false}\n                stroke={isDark ? \"#333\" : \"#eee\"} \n              />\n              <XAxis\n                dataKey=\"name\"\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n              />\n              <YAxis\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n                tickFormatter={(value) => `${value}`}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: isDark ? \"#1f2937\" : \"#fff\",\n                  borderColor: isDark ? \"#374151\" : \"#e5e7eb\",\n                  borderRadius: \"0.375rem\",\n                  boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                }}\n                itemStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                }}\n                labelStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                  fontWeight: \"bold\",\n                  marginBottom: \"0.5rem\",\n                }}\n                formatter={(value: number) => [`${value}`, \"Value\"]}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"value\"\n                stroke={isDark ? \"#9333ea\" : \"#c084fc\"}\n                strokeWidth={2}\n                fillOpacity={1}\n                fill=\"url(#colorValue)\"\n                activeDot={{ \n                  r: 6, \n                  stroke: isDark ? \"#c084fc\" : \"#9333ea\",\n                  strokeWidth: 2,\n                  fill: isDark ? \"#1f2937\" : \"#fff\"\n                }}\n                animationDuration={1500}\n                animationEasing=\"ease-out\"\n              />\n              {data[0]?.previousValue !== undefined && (\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"previousValue\"\n                  stroke={isDark ? \"#eab308\" : \"#fef08a\"}\n                  strokeWidth={2}\n                  fillOpacity={1}\n                  fill=\"url(#colorPreviousValue)\"\n                  animationDuration={1500}\n                  animationEasing=\"ease-out\"\n                />\n              )}\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/charts/bar-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useTheme } from \"next-themes\";\n\ninterface BarChartProps {\n  title?: string;\n  description?: string;\n  data: {\n    name: string;\n    [key: string]: number | string;\n  }[];\n  categories: {\n    name: string;\n    key: string;\n    color: string;\n    darkColor?: string;\n  }[];\n  className?: string;\n}\n\nexport function BarChartComponent({\n  title,\n  description,\n  data,\n  categories,\n  className,\n}: BarChartProps) {\n  const { theme, resolvedTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  \n  // Set mounted to true after the component mounts\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  \n  const isDark = mounted ? resolvedTheme === \"dark\" : false;\n  \n  const handleMouseEnter = (_: any, index: number) => {\n    setActiveIndex(index);\n  };\n  \n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const getPercentChange = (key: string) => {\n    if (data.length < 2) return 0;\n    \n    const current = Number(data[data.length - 1][key] || 0);\n    const previous = Number(data[data.length - 2][key] || 0);\n    \n    if (previous === 0) return 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  const totalPercentChange = categories.reduce((sum, category) => {\n    return sum + getPercentChange(category.key);\n  }, 0) / categories.length;\n\n  const trend = totalPercentChange >= 0 ? \"up\" : \"down\";\n  \n  // If not mounted yet, render a minimal version that won't cause hydration issues\n  if (!mounted) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>{title || \"Bar Chart\"}</CardTitle>\n          <CardDescription>\n            {description || \"Comparison of data across categories\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-4 flex items-center gap-2\">\n            <p className=\"text-sm font-medium\">\n              Loading chart data...\n            </p>\n          </div>\n          <div className=\"h-[300px]\">\n            {/* Empty space for chart */}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title || \"Bar Chart\"}</CardTitle>\n        <CardDescription>\n          {description || \"Comparison of data across categories\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"mb-4 flex items-center gap-2\">\n          <p className=\"text-sm font-medium\">\n            Trending{\" \"}\n            <span className={trend === \"up\" ? \"text-emerald-500\" : \"text-rose-500\"}>\n              {trend} by {Math.abs(totalPercentChange).toFixed(1)}%\n            </span>{\" \"}\n            this month\n          </p>\n        </div>\n        <div className=\"h-[300px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 20,\n                left: 20,\n                bottom: 5,\n              }}\n              barGap={8}\n              barSize={30}\n              onMouseLeave={handleMouseLeave}\n            >\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                vertical={false}\n                stroke={isDark ? \"#333\" : \"#eee\"} \n              />\n              <XAxis\n                dataKey=\"name\"\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n              />\n              <YAxis\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n                tickFormatter={(value) => `${value}`}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: isDark ? \"#1f2937\" : \"#fff\",\n                  borderColor: isDark ? \"#374151\" : \"#e5e7eb\",\n                  borderRadius: \"0.375rem\",\n                  boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                }}\n                itemStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                }}\n                labelStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                  fontWeight: \"bold\",\n                  marginBottom: \"0.5rem\",\n                }}\n              />\n              <Legend\n                verticalAlign=\"bottom\"\n                height={36}\n                iconType=\"circle\"\n                iconSize={10}\n                formatter={(value) => {\n                  return <span className=\"text-xs\">{value}</span>;\n                }}\n              />\n              {categories.map((category) => (\n                <Bar\n                  key={category.key}\n                  dataKey={category.key}\n                  name={category.name}\n                  fill={isDark ? (category.darkColor || category.color) : category.color}\n                  radius={[4, 4, 0, 0]}\n                  animationDuration={1500}\n                  animationEasing=\"ease-out\"\n                  onMouseEnter={(data, index) => handleMouseEnter(data, index)}\n                  activeBar={{\n                    stroke: isDark ? \"#fff\" : \"#000\",\n                    strokeWidth: 1,\n                    strokeOpacity: 0.1,\n                  }}\n                />\n              ))}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/charts/line-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useTheme } from \"next-themes\";\n\ninterface LineChartProps {\n  title?: string;\n  description?: string;\n  data: {\n    name: string;\n    [key: string]: number | string;\n  }[];\n  series: {\n    name: string;\n    key: string;\n    color: string;\n    darkColor?: string;\n  }[];\n  className?: string;\n}\n\nexport function LineChartComponent({\n  title,\n  description,\n  data,\n  series,\n  className,\n}: LineChartProps) {\n  const { theme, resolvedTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [activeLineIndex, setActiveLineIndex] = useState<number | null>(null);\n  \n  // Set mounted to true after the component mounts\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  \n  const isDark = mounted ? resolvedTheme === \"dark\" : false;\n  \n  const handleMouseEnter = (_: any, index: number) => {\n    setActiveLineIndex(index);\n  };\n  \n  const handleMouseLeave = () => {\n    setActiveLineIndex(null);\n  };\n\n  const getPercentChange = (key: string) => {\n    if (data.length < 2) return 0;\n    \n    const current = Number(data[data.length - 1][key] || 0);\n    const previous = Number(data[data.length - 2][key] || 0);\n    \n    if (previous === 0) return 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  // Calculate average trend for all series\n  const totalPercentChange = series.reduce((sum, serie) => {\n    return sum + getPercentChange(serie.key);\n  }, 0) / series.length;\n\n  const trend = totalPercentChange >= 0 ? \"up\" : \"down\";\n  \n  // If not mounted yet, render a minimal version that won't cause hydration issues\n  if (!mounted) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>{title || \"Line Chart\"}</CardTitle>\n          <CardDescription>\n            {description || \"Showing trends over time\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-4 flex items-center gap-2\">\n            <p className=\"text-sm font-medium\">\n              Loading chart data...\n            </p>\n          </div>\n          <div className=\"h-[300px]\">\n            {/* Empty space for chart */}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title || \"Line Chart\"}</CardTitle>\n        <CardDescription>\n          {description || \"Showing trends over time\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"mb-4 flex items-center gap-2\">\n          <p className=\"text-sm font-medium\">\n            Trending{\" \"}\n            <span className={trend === \"up\" ? \"text-emerald-500\" : \"text-rose-500\"}>\n              {trend} by {Math.abs(totalPercentChange).toFixed(1)}%\n            </span>{\" \"}\n            this month\n          </p>\n        </div>\n        <div className=\"h-[300px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 20,\n                left: 20,\n                bottom: 5,\n              }}\n              onMouseLeave={handleMouseLeave}\n            >\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                vertical={false}\n                stroke={isDark ? \"#333\" : \"#eee\"} \n              />\n              <XAxis\n                dataKey=\"name\"\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n              />\n              <YAxis\n                stroke={isDark ? \"#888\" : \"#888\"}\n                fontSize={12}\n                tickLine={false}\n                axisLine={false}\n                tickFormatter={(value) => `${value}`}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: isDark ? \"#1f2937\" : \"#fff\",\n                  borderColor: isDark ? \"#374151\" : \"#e5e7eb\",\n                  borderRadius: \"0.375rem\",\n                  boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                }}\n                itemStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                }}\n                labelStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                  fontWeight: \"bold\",\n                  marginBottom: \"0.5rem\",\n                }}\n                formatter={(value) => [`${value}`, \"\"]}\n              />\n              <Legend\n                verticalAlign=\"bottom\"\n                height={36}\n                iconType=\"circle\"\n                iconSize={8}\n                formatter={(value) => {\n                  return <span className=\"text-xs\">{value}</span>;\n                }}\n              />\n              {series.map((serie, index) => (\n                <Line\n                  key={serie.key}\n                  type=\"monotone\"\n                  dataKey={serie.key}\n                  name={serie.name}\n                  stroke={isDark ? (serie.darkColor || serie.color) : serie.color}\n                  strokeWidth={activeLineIndex === index ? 3 : 2}\n                  dot={{\n                    r: 4,\n                    fill: isDark ? \"#1f2937\" : \"#fff\",\n                    stroke: isDark ? (serie.darkColor || serie.color) : serie.color,\n                    strokeWidth: 2,\n                  }}\n                  activeDot={{\n                    r: 6,\n                    fill: isDark ? \"#1f2937\" : \"#fff\",\n                    stroke: isDark ? (serie.darkColor || serie.color) : serie.color,\n                    strokeWidth: 3,\n                  }}\n                  onMouseEnter={(data) => handleMouseEnter(data, index)}\n                  animationDuration={1500}\n                  animationEasing=\"ease-out\"\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAdA;;;;;;AAgCO,SAAS,mBAAmB,EACjC,KAAK,EACL,WAAW,EACX,IAAI,EACJ,MAAM,EACN,SAAS,EACM;IACf,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IACxC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtE,iDAAiD;IACjD,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,SAAS,UAAU,kBAAkB,SAAS;IAEpD,MAAM,mBAAmB,CAAC,GAAQ;QAChC,mBAAmB;IACrB;IAEA,MAAM,mBAAmB;QACvB,mBAAmB;IACrB;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,KAAK,MAAM,GAAG,GAAG,OAAO;QAE5B,MAAM,UAAU,OAAO,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,CAAC,IAAI,IAAI;QACrD,MAAM,WAAW,OAAO,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,CAAC,IAAI,IAAI;QAEtD,IAAI,aAAa,GAAG,OAAO;QAC3B,OAAO,AAAC,CAAC,UAAU,QAAQ,IAAI,WAAY;IAC7C;IAEA,yCAAyC;IACzC,MAAM,qBAAqB,OAAO,MAAM,CAAC,CAAC,KAAK;QAC7C,OAAO,MAAM,iBAAiB,MAAM,GAAG;IACzC,GAAG,KAAK,OAAO,MAAM;IAErB,MAAM,QAAQ,sBAAsB,IAAI,OAAO;IAE/C,iFAAiF;IACjF,IAAI,CAAC,SAAS;QACZ,qBACE,6WAAC,gIAAA,CAAA,OAAI;YAAC,WAAW;;8BACf,6WAAC,gIAAA,CAAA,aAAU;;sCACT,6WAAC,gIAAA,CAAA,YAAS;sCAAE,SAAS;;;;;;sCACrB,6WAAC,gIAAA,CAAA,kBAAe;sCACb,eAAe;;;;;;;;;;;;8BAGpB,6WAAC,gIAAA,CAAA,cAAW;;sCACV,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAE,WAAU;0CAAsB;;;;;;;;;;;sCAIrC,6WAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;IAMvB;IAEA,qBACE,6WAAC,gIAAA,CAAA,OAAI;QAAC,WAAW;;0BACf,6WAAC,gIAAA,CAAA,aAAU;;kCACT,6WAAC,gIAAA,CAAA,YAAS;kCAAE,SAAS;;;;;;kCACrB,6WAAC,gIAAA,CAAA,kBAAe;kCACb,eAAe;;;;;;;;;;;;0BAGpB,6WAAC,gIAAA,CAAA,cAAW;;kCACV,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC;4BAAE,WAAU;;gCAAsB;gCACxB;8CACT,6WAAC;oCAAK,WAAW,UAAU,OAAO,qBAAqB;;wCACpD;wCAAM;wCAAK,KAAK,GAAG,CAAC,oBAAoB,OAAO,CAAC;wCAAG;;;;;;;gCAC9C;gCAAI;;;;;;;;;;;;kCAIhB,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC,sSAAA,CAAA,sBAAmB;4BAAC,OAAM;4BAAO,QAAO;sCACvC,cAAA,6WAAC,wRAAA,CAAA,YAAS;gCACR,MAAM;gCACN,QAAQ;oCACN,KAAK;oCACL,OAAO;oCACP,MAAM;oCACN,QAAQ;gCACV;gCACA,cAAc;;kDAEd,6WAAC,gSAAA,CAAA,gBAAa;wCACZ,iBAAgB;wCAChB,UAAU;wCACV,QAAQ,SAAS,SAAS;;;;;;kDAE5B,6WAAC,wRAAA,CAAA,QAAK;wCACJ,SAAQ;wCACR,QAAQ,SAAS,SAAS;wCAC1B,UAAU;wCACV,UAAU;wCACV,UAAU;;;;;;kDAEZ,6WAAC,wRAAA,CAAA,QAAK;wCACJ,QAAQ,SAAS,SAAS;wCAC1B,UAAU;wCACV,UAAU;wCACV,UAAU;wCACV,eAAe,CAAC,QAAU,GAAG,OAAO;;;;;;kDAEtC,6WAAC,0RAAA,CAAA,UAAO;wCACN,cAAc;4CACZ,iBAAiB,SAAS,YAAY;4CACtC,aAAa,SAAS,YAAY;4CAClC,cAAc;4CACd,WAAW;wCACb;wCACA,WAAW;4CACT,OAAO,SAAS,YAAY;wCAC9B;wCACA,YAAY;4CACV,OAAO,SAAS,YAAY;4CAC5B,YAAY;4CACZ,cAAc;wCAChB;wCACA,WAAW,CAAC,QAAU;gDAAC,GAAG,OAAO;gDAAE;6CAAG;;;;;;kDAExC,6WAAC,yRAAA,CAAA,SAAM;wCACL,eAAc;wCACd,QAAQ;wCACR,UAAS;wCACT,UAAU;wCACV,WAAW,CAAC;4CACV,qBAAO,6WAAC;gDAAK,WAAU;0DAAW;;;;;;wCACpC;;;;;;oCAED,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,6WAAC,uRAAA,CAAA,OAAI;4CAEH,MAAK;4CACL,SAAS,MAAM,GAAG;4CAClB,MAAM,MAAM,IAAI;4CAChB,QAAQ,SAAU,MAAM,SAAS,IAAI,MAAM,KAAK,GAAI,MAAM,KAAK;4CAC/D,aAAa,oBAAoB,QAAQ,IAAI;4CAC7C,KAAK;gDACH,GAAG;gDACH,MAAM,SAAS,YAAY;gDAC3B,QAAQ,SAAU,MAAM,SAAS,IAAI,MAAM,KAAK,GAAI,MAAM,KAAK;gDAC/D,aAAa;4CACf;4CACA,WAAW;gDACT,GAAG;gDACH,MAAM,SAAS,YAAY;gDAC3B,QAAQ,SAAU,MAAM,SAAS,IAAI,MAAM,KAAK,GAAI,MAAM,KAAK;gDAC/D,aAAa;4CACf;4CACA,cAAc,CAAC,OAAS,iBAAiB,MAAM;4CAC/C,mBAAmB;4CACnB,iBAAgB;2CApBX,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BhC","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///Users/shaybushary/Desktop/coders-clan/coders-clan-template/src/components/charts/pie-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Cell,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n} from \"recharts\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useTheme } from \"next-themes\";\n\ninterface PieChartProps {\n  title?: string;\n  description?: string;\n  data: {\n    name: string;\n    value: number;\n  }[];\n  className?: string;\n  donut?: boolean;\n  totalText?: string;\n}\n\nexport function PieChartComponent({\n  title,\n  description,\n  data,\n  className,\n  donut = true,\n  totalText,\n}: PieChartProps) {\n  const { theme, resolvedTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  \n  // Set mounted to true after the component mounts\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  \n  const isDark = mounted ? resolvedTheme === \"dark\" : false;\n  \n  const handleMouseEnter = (_: any, index: number) => {\n    setActiveIndex(index);\n  };\n  \n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n\n  // Stable colors that work for both light and dark themes\n  const COLORS = [\n    '#c084fc',  // Purple\n    '#fef08a',  // Yellow\n    '#93c5fd',  // Blue\n    '#86efac',  // Green\n    '#fb7185',  // Red\n    '#67e8f9',  // Cyan\n    '#fdba74',  // Orange\n    '#d8b4fe',  // Violet\n  ];\n\n  const renderActiveShape = (props: any) => {\n    const {\n      cx,\n      cy,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      percent,\n      name,\n      value,\n    } = props;\n\n    return (\n      <g>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius + 8}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        {donut && totalText && mounted && (\n          <text\n            x={cx}\n            y={cy}\n            dy={0}\n            textAnchor=\"middle\"\n            fill={isDark ? \"#e5e7eb\" : \"#374151\"}\n            className=\"font-medium text-lg\"\n          >\n            {totalText}\n          </text>\n        )}\n      </g>\n    );\n  };\n\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n\n  // If not mounted yet, render a minimal version that won't cause hydration issues\n  if (!mounted) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>{title || \"Pie Chart\"}</CardTitle>\n          <CardDescription>\n            {description || \"Distribution of values\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-[300px] flex items-center justify-center\">\n            {/* Empty space for chart */}\n          </div>\n          <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mt-4\">\n            {data.map((entry, index) => (\n              <div key={`legend-${index}`} className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full\" \n                  style={{ backgroundColor: COLORS[index % COLORS.length] }}\n                />\n                <span className=\"text-sm truncate\">{entry.name}</span>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title || \"Pie Chart\"}</CardTitle>\n        <CardDescription>\n          {description || \"Distribution of values\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"h-[300px] flex items-center justify-center\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={data}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                innerRadius={donut ? 80 : 0}\n                outerRadius={120}\n                paddingAngle={2}\n                dataKey=\"value\"\n                activeIndex={activeIndex !== null ? activeIndex : undefined}\n                activeShape={renderActiveShape}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                animationDuration={1000}\n                animationBegin={0}\n                animationEasing=\"ease\"\n              >\n                {data.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`} \n                    fill={COLORS[index % COLORS.length]} \n                    stroke={isDark ? \"#1f2937\" : \"#fff\"}\n                    strokeWidth={2}\n                  />\n                ))}\n              </Pie>\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: isDark ? \"#1f2937\" : \"#fff\",\n                  borderColor: isDark ? \"#374151\" : \"#e5e7eb\",\n                  borderRadius: \"0.375rem\",\n                  boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n                }}\n                itemStyle={{\n                  color: isDark ? \"#e5e7eb\" : \"#374151\",\n                }}\n                formatter={(value: number) => {\n                  const percentage = ((value / total) * 100).toFixed(1);\n                  return [`${value} (${percentage}%)`, \"Value\"];\n                }}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n        \n        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mt-4\">\n          {data.map((entry, index) => (\n            <div key={`legend-${index}`} className=\"flex items-center gap-2\">\n              <div \n                className=\"w-3 h-3 rounded-full\" \n                style={{ backgroundColor: COLORS[index % COLORS.length] }}\n              />\n              <span className=\"text-sm truncate\">{entry.name}</span>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAZA;;;;;;AA0BO,SAAS,kBAAkB,EAChC,KAAK,EACL,WAAW,EACX,IAAI,EACJ,SAAS,EACT,QAAQ,IAAI,EACZ,SAAS,EACK;IACd,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IACxC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9D,iDAAiD;IACjD,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,MAAM,SAAS,UAAU,kBAAkB,SAAS;IAEpD,MAAM,mBAAmB,CAAC,GAAQ;QAChC,eAAe;IACjB;IAEA,MAAM,mBAAmB;QACvB,eAAe;IACjB;IAEA,yDAAyD;IACzD,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,oBAAoB,CAAC;QACzB,MAAM,EACJ,EAAE,EACF,EAAE,EACF,WAAW,EACX,WAAW,EACX,UAAU,EACV,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,IAAI,EACJ,KAAK,EACN,GAAG;QAEJ,qBACE,6WAAC;;8BACC,6WAAC,qRAAA,CAAA,SAAM;oBACL,IAAI;oBACJ,IAAI;oBACJ,aAAa;oBACb,aAAa,cAAc;oBAC3B,YAAY;oBACZ,UAAU;oBACV,MAAM;;;;;;gBAEP,SAAS,aAAa,yBACrB,6WAAC;oBACC,GAAG;oBACH,GAAG;oBACH,IAAI;oBACJ,YAAW;oBACX,MAAM,SAAS,YAAY;oBAC3B,WAAU;8BAET;;;;;;;;;;;;IAKX;IAEA,MAAM,QAAQ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;IAE3D,iFAAiF;IACjF,IAAI,CAAC,SAAS;QACZ,qBACE,6WAAC,gIAAA,CAAA,OAAI;YAAC,WAAW;;8BACf,6WAAC,gIAAA,CAAA,aAAU;;sCACT,6WAAC,gIAAA,CAAA,YAAS;sCAAE,SAAS;;;;;;sCACrB,6WAAC,gIAAA,CAAA,kBAAe;sCACb,eAAe;;;;;;;;;;;;8BAGpB,6WAAC,gIAAA,CAAA,cAAW;;sCACV,6WAAC;4BAAI,WAAU;;;;;;sCAGf,6WAAC;4BAAI,WAAU;sCACZ,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6WAAC;oCAA4B,WAAU;;sDACrC,6WAAC;4CACC,WAAU;4CACV,OAAO;gDAAE,iBAAiB,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;4CAAC;;;;;;sDAE1D,6WAAC;4CAAK,WAAU;sDAAoB,MAAM,IAAI;;;;;;;mCALtC,CAAC,OAAO,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;IAYvC;IAEA,qBACE,6WAAC,gIAAA,CAAA,OAAI;QAAC,WAAW;;0BACf,6WAAC,gIAAA,CAAA,aAAU;;kCACT,6WAAC,gIAAA,CAAA,YAAS;kCAAE,SAAS;;;;;;kCACrB,6WAAC,gIAAA,CAAA,kBAAe;kCACb,eAAe;;;;;;;;;;;;0BAGpB,6WAAC,gIAAA,CAAA,cAAW;;kCACV,6WAAC;wBAAI,WAAU;kCACb,cAAA,6WAAC,sSAAA,CAAA,sBAAmB;4BAAC,OAAM;4BAAO,QAAO;sCACvC,cAAA,6WAAC,uRAAA,CAAA,WAAQ;;kDACP,6WAAC,kRAAA,CAAA,MAAG;wCACF,MAAM;wCACN,IAAG;wCACH,IAAG;wCACH,WAAW;wCACX,aAAa,QAAQ,KAAK;wCAC1B,aAAa;wCACb,cAAc;wCACd,SAAQ;wCACR,aAAa,gBAAgB,OAAO,cAAc;wCAClD,aAAa;wCACb,cAAc;wCACd,cAAc;wCACd,mBAAmB;wCACnB,gBAAgB;wCAChB,iBAAgB;kDAEf,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6WAAC,uRAAA,CAAA,OAAI;gDAEH,MAAM,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;gDACnC,QAAQ,SAAS,YAAY;gDAC7B,aAAa;+CAHR,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;kDAO1B,6WAAC,0RAAA,CAAA,UAAO;wCACN,cAAc;4CACZ,iBAAiB,SAAS,YAAY;4CACtC,aAAa,SAAS,YAAY;4CAClC,cAAc;4CACd,WAAW;wCACb;wCACA,WAAW;4CACT,OAAO,SAAS,YAAY;wCAC9B;wCACA,WAAW,CAAC;4CACV,MAAM,aAAa,CAAC,AAAC,QAAQ,QAAS,GAAG,EAAE,OAAO,CAAC;4CACnD,OAAO;gDAAC,GAAG,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC;gDAAE;6CAAQ;wCAC/C;;;;;;;;;;;;;;;;;;;;;;kCAMR,6WAAC;wBAAI,WAAU;kCACZ,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6WAAC;gCAA4B,WAAU;;kDACrC,6WAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,iBAAiB,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;wCAAC;;;;;;kDAE1D,6WAAC;wCAAK,WAAU;kDAAoB,MAAM,IAAI;;;;;;;+BALtC,CAAC,OAAO,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;AAYvC","debugId":null}}]
}